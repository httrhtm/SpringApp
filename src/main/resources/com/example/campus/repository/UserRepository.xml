<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace：mapperインターフェースのパッケージ付きクラス名を指定 -->
<mapper namespace="com.example.campus.repository.UserRepository">

	<!--今回利用するステートメントの定義 -->
	<select id = "identifyUser" parameterType="java.lang.String" resultMap="userDetails">
	select
		id, password, name, admin_flag
		from users
		where id = #{id}
		and deleteflag = 0
	</select>

	<!--
	javaオブジェクトとsqlの実行結果をマッピングするためのもの
	type属性にはメソッドの戻り値を指定する＝Userクラス（UserDetails インターフェースの実装クラス）
	id属性は任意。selectで使う。
	-->
	<resultMap type="com.example.campus.entity.Users" id ="userDetails">
		<result property="id" column="id" />
		<result property="password" column="password" />
	</resultMap>

	<!-- 全件取得 -->
	<select id="findAll" resultType="com.example.campus.entity.Users">
		select * from users
	</select>

	<!-- 指定IDのレコードを取得 -->
	<select id="findByUsersId" resultType="com.example.campus.entity.Users">
		select * from users where id = #{id}
	</select>

	<!-- 新規作成 -->
	<insert id="create" parameterType="com.example.campus.entity.Users">
		insert into users (name, password, admin_flag, created_at, updated_at) values (#{name}, #{password}, #{admin_flag}, current_timestamp(), current_timestamp())
	</insert>

	<!-- 更新 -->
	<update id="edit">
		update users set name = #{name}, password = #{password}, admin_flag = #{admin_flag}, updated_at = current_timestamp() where id = #{id}
	</update>
</mapper>